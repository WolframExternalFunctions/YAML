(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     60114,       1291]
NotebookOptionsPosition[     53791,       1155]
NotebookOutlinePosition[     54585,       1181]
CellTagsIndexPosition[     54505,       1176]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ImportYAML", "ObjectName",
 CellID->1819413968,ExpressionUUID->"b4086551-3643-44de-ab2e-59d05d7c6a5d"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"7db963cc-6a86-4080-aa12-31df9273dfc5"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["ImportYAML",
    BaseStyle->"Link",
    ButtonData->"paclet:WolframExternalFunctionsYAML/ref/ImportYAML"], "[", 
   StyleBox["file", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "5fb3cecc-3418-455c-b836-c011f12e5046"],
 "\[LineSeparator]imports a YAML file and returns a ",
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "133c53be-61de-4d9a-a427-8fc194a081aa"]
}], "Usage",
 CellChangeTimes->{{3.91822402837202*^9, 3.918224028456892*^9}, {
  3.918233296052226*^9, 3.9182333049626226`*^9}},
 CellID->870910543,ExpressionUUID->"467623d3-9317-4a9e-9526-f007e4f9347b"],

Cell["XXXX", "Notes",
 CellID->144958249,ExpressionUUID->"b889cbc9-26de-41b0-9d35-03c8ce04e44b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "a007748a-c5bf-4a49-8a4e-caa523bb70b1"]
}], "SeeAlsoSection",
 CellID->1066835245,ExpressionUUID->"d83bc114-7eba-4966-a363-607536ec435e"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link"]], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "930eb1a9-66bc-4a9e-9a89-273dd071f9ff"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["ExportYAML",
   BaseStyle->"Link",
   ButtonData->"paclet:WolframExternalFunctions/YAML/ref/ExportYAML"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"7e181a52-2de4-421b-bc9a-fe85c1ffcba3",ExpressionUUID->
  "0686276a-0026-439f-999b-3f8b2d0e4c1b"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "70a6c6ab-78a9-420b-8bf6-6faf1675e738"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "4abbb2ff-b73e-496d-a3a5-4df2cd281a92", 
     "1cce3f25-28ef-4dc8-b1cd-ed50af22ab4b"], $CellContext`cellobj$$ = 
    CellObject[
    "318e6d9d-c34a-4418-8ae6-d062baea4741", 
     "4833e0df-9df3-4dae-ab5b-f6814e77a4c4"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "318e6d9d-c34a-4418-8ae6-d062baea4741"]
}], "SeeAlso",
 CellChangeTimes->{{3.918233270950721*^9, 3.918233285670986*^9}},
 CellID->958993912,ExpressionUUID->"f01145f7-ca79-457a-b5ff-08f86692978e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "87455bac-838f-45ac-b97e-043c68c55d7f"]
}], "TechNotesSection",
 CellID->945908249,ExpressionUUID->"889ec682-f3db-4663-b6f2-7436d9ade8cc"],

Cell["XXXX", "Tutorials",
 CellID->58502202,ExpressionUUID->"d1bb22a5-2df2-456e-af23-2cd21482e73b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->1846482335,ExpressionUUID->"94da6542-2514-4a22-8af1-05fb47f839a1"],

Cell["XXXX", "MoreAbout",
 CellID->542421548,ExpressionUUID->"6d7bd835-8ab8-49e6-8987-fcb95f41bac9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "a600ac15-94e9-4ca8-96d6-9aeb96e87724"]
}], "RelatedLinksSection",
 CellID->410875721,ExpressionUUID->"6729987f-d8d5-428e-9297-d50c484e955a"],

Cell["XXXX", "RelatedLinks",
 CellID->1428317742,ExpressionUUID->"2c5c1647-7159-48dd-b28a-c4a96c547135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "520b5eb7-5e18-4f54-80d4-2e804e4508dd"]
}], "ExamplesInitializationSection",
 CellID->1164083628,ExpressionUUID->"df89a3d7-3d87-49f4-ae82-a2087e3f273d"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<WolframExternalFunctions`YAML`\>\"", 
  "]"}]], "ExampleInitialization",
 CellChangeTimes->{{3.9182240345036297`*^9, 3.918224035290593*^9}},
 CellID->1177511626,ExpressionUUID->"29a79f90-a5ac-4d4a-af17-44509c01e4c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->1376091077,ExpressionUUID->"c5438fd9-bccc-4a0c-a6f0-277df5e10b61"],

Cell[TextData[{
 "Import a \"YAML\" file as a ",
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "1dd75652-df1e-4215-b77b-370f56c946ee"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.918233250602479*^9, 3.918233267658238*^9}},
 CellID->1300778312,ExpressionUUID->"f276bd47-4316-4626-a0b3-892b61aca8d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"PacletObject", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["104", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     PacletObject["WolframExternalFunctions/YAML"],
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"\"\<AssetLocation\>\"", ",", "\"\<example.yaml\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"data", "=", 
  RowBox[{"ImportYAML", "[", "file", "]"}]}]}], "Input",
 CellChangeTimes->{{3.918233173920817*^9, 3.9182331861716213`*^9}, {
   3.9182332409009533`*^9, 3.9182332419057817`*^9}, 3.918296995133666*^9},
 CellLabel->"In[4]:=",
 CellID->1214878937,ExpressionUUID->"fcfd9d26-5d5d-4a68-b64a-d13361dec218"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "person" -> <|
        "name" -> "Alice Johnson", "age" -> 30, 
         "interests" -> {"reading", "hiking", "technology"}|>, 
       "servers" -> <|
        "production" -> <|"host" -> "example.com", "port" -> 8080|>, 
         "development" -> <|"host" -> "localhost", "port" -> 3000|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            TypeSystem`PackageScope`UnknownShape[False]]], 5, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, 5], 2], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            TypeSystem`PackageScope`UnknownShape[False]]], 5, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, 5], 2], "Path" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     2, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["person", 
                  Style[
                  "person", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["person"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["person"], 
                    Key["name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Alice Johnson", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["person"], 
                    Key["age"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["age"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["interests", 
                  Style[
                  "interests", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["person"], 
                    Key["interests"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["interests"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"reading", "hiking", "technology"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"reading", "hiking", "technology"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["person"], 
                    Key["interests"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["person"], 
                 Key["interests"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["servers", 
                  Style[
                  "servers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["servers"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["servers"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["production", 
                  Style[
                  "production", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["servers"], 
                    Key["production"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["servers"], 
                 Key["production"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"host" -> "example.com", "port" -> 8080|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"host" -> "example.com", "port" -> 8080|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["servers"], 
                    Key["production"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["servers"], 
                 Key["production"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["development", 
                  Style[
                  "development", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["servers"], 
                    Key["development"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["servers"], 
                 Key["development"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"host" -> "localhost", "port" -> 3000|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"host" -> "localhost", "port" -> 3000|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["servers"], 
                    Key["development"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["servers"], 
                 Key["development"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{459., {74.3544921875, 79.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{459., {74.3544921875, 79.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.918233183205249*^9, 3.9182332434186583`*^9},
 CellLabel->"Out[5]=",
 CellID->1200250769,ExpressionUUID->"eebd476e-9dca-449d-b11a-f1daff0424bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "e01cd91b-9125-4738-a6b7-27c22b546d47"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1711336596,ExpressionUUID->"6f5715ee-e44b-43ac-812e-69f67f79f421"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "68ea5e59-ab6a-401d-9dfb-cc769d9ef3dc"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1185684701,ExpressionUUID->"20a9acac-41a9-4f2e-ba2c-9dace969713b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "b96bbd23-0fc5-4752-8a26-d26272fdf817"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1302009194,ExpressionUUID->"3db0e35e-47a1-4d38-9e9c-05ef47e4f149"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "441c4704-00d6-40a0-8ee8-09285be68ba5"],
  $Line = 0; Null]], "ExampleSection",
 CellID->10160628,ExpressionUUID->"c8d60f59-9afa-47b0-a57c-50afc3f4e3d5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "a7608d8e-c126-4a25-8e99-1dde1017fa7d"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1118466683,ExpressionUUID->"e5cd1e87-0c14-4ca0-be5f-ec2512c2008c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "820561fd-c644-428e-b0e1-287cd624491e"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1145178990,ExpressionUUID->"783032fb-4214-4617-9470-20973883af57"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "bee2e87a-1f12-4e58-933e-ff596af6f20b"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1274840516,ExpressionUUID->"7a7b31ab-d98a-412b-a3f9-3715f8885a8d"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "5e2d679f-cd24-4a16-b78f-075d1ae9cc59"],
  $Line = 0; Null]], "ExampleSection",
 CellID->800206293,ExpressionUUID->"e55fd86d-35fd-406a-a797-38e40a94c75f"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "bcd2009b-5746-4441-9b33-07f0b6d3ebad"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1524568937,ExpressionUUID->"2f8fd9ef-89c0-4a48-845d-b2617fbeb956"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "d6511b04-28d3-4abd-87b7-adc5c8610352"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1802731802,ExpressionUUID->"f9884916-6916-4ec1-a7f1-e47a25089bfe"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "cb01ca50-6113-4f24-9687-75080623ed4e"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1814104338,ExpressionUUID->"663c0e48-4a62-4f0a-86e0-3d0476dac293"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1826272307,ExpressionUUID->"aae414ff-d620-4ef2-8e67-7d9c26a11607"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"0a429440-5716-4ac6-9752-7c8ed121fcf8"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"965adf3e-f43f-437e-9b3f-5b8f68631f4d"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "9d7a12b4-37b6-4cb4-8426-2ff9659a4798"]
}], "History",
 CellID->174897178,ExpressionUUID->"ed67b024-970b-4882-a1b8-d95b6f6925e0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "a46853c9-8d0f-419e-8254-9cd090c854ae"]
}], "CategorizationSection",
 CellID->1739241550,ExpressionUUID->"65a59c76-a471-466a-ac3f-006d6cfae4ee"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->2032811533,ExpressionUUID->"4656d0de-25b2-4b56-ae77-913ac754ecf0"],

Cell["WolframExternalFunctions/YAML", "Categorization",
 CellLabel->"Paclet Name",
 CellID->109190958,ExpressionUUID->"103a2f5e-6b23-4e81-bb8a-6ffbbf3d7423"],

Cell["WolframExternalFunctions`YAML`", "Categorization",
 CellLabel->"Context",
 CellID->1221396568,ExpressionUUID->"f61887d1-1d2c-4152-8ee6-7704449cf26e"],

Cell["WolframExternalFunctions/YAML/ref/ImportYAML", "Categorization",
 CellLabel->"URI",
 CellID->215936703,ExpressionUUID->"2a8adcad-f3d7-48fd-a70e-53db63052073"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1687834495,ExpressionUUID->"6867682d-7738-4f5e-bfc3-e1bd1eb993fc"],

Cell["XXXX", "Keywords",
 CellID->1322864242,ExpressionUUID->"35b6b9f1-157e-4c57-90d8-1eb29cd713f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->481117903,ExpressionUUID->"003dcd88-35d7-486c-870c-763836ed5c3a"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->872664766,ExpressionUUID->"2d325fa4-a67c-4e8a-b409-8bf27ecac302"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->1710896799,ExpressionUUID->"cd14b3f3-6c07-4a3e-a321-dfd1b89faecc"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->236467463,ExpressionUUID->"a0f521ac-13ca-4b34-b129-6907c592d87e"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->1463903691,ExpressionUUID->"305259d8-aae4-4cfb-b862-5419061d7fba"]
}, Closed]]
}, Open  ]]
},
WindowSize->{996, 770},
WindowMargins->{{5, Automatic}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "WolframExternalFunctions/YAML"|>,
CellContext->"Global`",
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4abbb2ff-b73e-496d-a3a5-4df2cd281a92"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[47964, 981, 488, 13, 58, "ExtendedExamplesSection",ExpressionUUID->"6f5715ee-e44b-43ac-812e-69f67f79f421",
   CellTags->"ExtendedExamples",
   CellID->1711336596]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 54310, 1169}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 108, 1, 74, "ObjectName",ExpressionUUID->"b4086551-3643-44de-ab2e-59d05d7c6a5d",
 CellID->1819413968],
Cell[687, 25, 755, 17, 81, "Usage",ExpressionUUID->"467623d3-9317-4a9e-9526-f007e4f9347b",
 CellID->870910543],
Cell[1445, 44, 96, 1, 27, "Notes",ExpressionUUID->"b889cbc9-26de-41b0-9d35-03c8ce04e44b",
 CellID->144958249]
}, Open  ]],
Cell[CellGroupData[{
Cell[1578, 50, 459, 13, 40, "SeeAlsoSection",ExpressionUUID->"d83bc114-7eba-4966-a363-607536ec435e",
 CellID->1066835245],
Cell[2040, 65, 2077, 51, 23, "SeeAlso",ExpressionUUID->"f01145f7-ca79-457a-b5ff-08f86692978e",
 CellID->958993912]
}, Open  ]],
Cell[CellGroupData[{
Cell[4154, 121, 435, 12, 41, "TechNotesSection",ExpressionUUID->"889ec682-f3db-4663-b6f2-7436d9ade8cc",
 CellID->945908249],
Cell[4592, 135, 99, 1, 19, "Tutorials",ExpressionUUID->"d1bb22a5-2df2-456e-af23-2cd21482e73b",
 CellID->58502202]
}, Open  ]],
Cell[CellGroupData[{
Cell[4728, 141, 118, 1, 40, "MoreAboutSection",ExpressionUUID->"94da6542-2514-4a22-8af1-05fb47f839a1",
 CellID->1846482335],
Cell[4849, 144, 100, 1, 19, "MoreAbout",ExpressionUUID->"6d7bd835-8ab8-49e6-8987-fcb95f41bac9",
 CellID->542421548]
}, Open  ]],
Cell[CellGroupData[{
Cell[4986, 150, 472, 13, 40, "RelatedLinksSection",ExpressionUUID->"6729987f-d8d5-428e-9297-d50c484e955a",
 CellID->410875721],
Cell[5461, 165, 104, 1, 19, "RelatedLinks",ExpressionUUID->"2c5c1647-7159-48dd-b28a-c4a96c547135",
 CellID->1428317742]
}, Open  ]],
Cell[CellGroupData[{
Cell[5602, 171, 531, 14, 70, "ExamplesInitializationSection",ExpressionUUID->"df89a3d7-3d87-49f4-ae82-a2087e3f273d",
 CellID->1164083628],
Cell[6136, 187, 258, 4, 47, "ExampleInitialization",ExpressionUUID->"29a79f90-a5ac-4d4a-af17-44509c01e4c9",
 CellID->1177511626]
}, Open  ]],
Cell[CellGroupData[{
Cell[6431, 196, 443, 12, 73, "PrimaryExamplesSection",ExpressionUUID->"c5438fd9-bccc-4a0c-a6f0-277df5e10b61",
 CellID->1376091077],
Cell[6877, 210, 352, 9, 26, "ExampleText",ExpressionUUID->"f276bd47-4316-4626-a0b3-892b61aca8d7",
 CellID->1300778312],
Cell[CellGroupData[{
Cell[7254, 223, 1253, 30, 55, "Input",ExpressionUUID->"fcfd9d26-5d5d-4a68-b64a-d13361dec218",
 CellID->1214878937],
Cell[8510, 255, 39405, 720, 166, "Output",ExpressionUUID->"eebd476e-9dca-449d-b11a-f1daff0424bf",
 CellID->1200250769]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47964, 981, 488, 13, 58, "ExtendedExamplesSection",ExpressionUUID->"6f5715ee-e44b-43ac-812e-69f67f79f421",
 CellTags->"ExtendedExamples",
 CellID->1711336596],
Cell[48455, 996, 242, 5, 35, "ExampleSection",ExpressionUUID->"20a9acac-41a9-4f2e-ba2c-9dace969713b",
 CellID->1185684701],
Cell[48700, 1003, 265, 5, 23, "ExampleSection",ExpressionUUID->"3db0e35e-47a1-4d38-9e9c-05ef47e4f149",
 CellID->1302009194],
Cell[CellGroupData[{
Cell[48990, 1012, 242, 5, 23, "ExampleSection",ExpressionUUID->"c8d60f59-9afa-47b0-a57c-50afc3f4e3d5",
 CellID->10160628],
Cell[49235, 1019, 247, 5, 26, "ExampleSubsection",ExpressionUUID->"e5cd1e87-0c14-4ca0-be5f-ec2512c2008c",
 CellID->1118466683],
Cell[49485, 1026, 247, 5, 22, "ExampleSubsection",ExpressionUUID->"783032fb-4214-4617-9470-20973883af57",
 CellID->1145178990]
}, Open  ]],
Cell[49747, 1034, 249, 5, 35, "ExampleSection",ExpressionUUID->"7a7b31ab-d98a-412b-a3f9-3715f8885a8d",
 CellID->1274840516],
Cell[49999, 1041, 258, 5, 23, "ExampleSection",ExpressionUUID->"e55fd86d-35fd-406a-a797-38e40a94c75f",
 CellID->800206293],
Cell[50260, 1048, 252, 5, 23, "ExampleSection",ExpressionUUID->"2f8fd9ef-89c0-4a48-845d-b2617fbeb956",
 CellID->1524568937],
Cell[50515, 1055, 257, 5, 23, "ExampleSection",ExpressionUUID->"f9884916-6916-4ec1-a7f1-e47a25089bfe",
 CellID->1802731802],
Cell[50775, 1062, 250, 5, 23, "ExampleSection",ExpressionUUID->"663c0e48-4a62-4f0a-86e0-3d0476dac293",
 CellID->1814104338]
}, Open  ]],
Cell[CellGroupData[{
Cell[51062, 1072, 111, 1, 72, "MetadataSection",ExpressionUUID->"aae414ff-d620-4ef2-8e67-7d9c26a11607",
 CellID->1826272307],
Cell[51176, 1075, 476, 12, 26, "History",ExpressionUUID->"ed67b024-970b-4882-a1b8-d95b6f6925e0",
 CellID->174897178],
Cell[CellGroupData[{
Cell[51677, 1091, 485, 13, 21, "CategorizationSection",ExpressionUUID->"65a59c76-a471-466a-ac3f-006d6cfae4ee",
 CellID->1739241550],
Cell[52165, 1106, 135, 2, 34, "Categorization",ExpressionUUID->"4656d0de-25b2-4b56-ae77-913ac754ecf0",
 CellID->2032811533],
Cell[52303, 1110, 157, 2, 34, "Categorization",ExpressionUUID->"103a2f5e-6b23-4e81-bb8a-6ffbbf3d7423",
 CellID->109190958],
Cell[52463, 1114, 155, 2, 34, "Categorization",ExpressionUUID->"f61887d1-1d2c-4152-8ee6-7704449cf26e",
 CellID->1221396568],
Cell[52621, 1118, 164, 2, 34, "Categorization",ExpressionUUID->"2a8adcad-f3d7-48fd-a70e-53db63052073",
 CellID->215936703]
}, Closed]],
Cell[CellGroupData[{
Cell[52822, 1125, 111, 1, 21, "KeywordsSection",ExpressionUUID->"6867682d-7738-4f5e-bfc3-e1bd1eb993fc",
 CellID->1687834495],
Cell[52936, 1128, 100, 1, 70, "Keywords",ExpressionUUID->"35b6b9f1-157e-4c57-90d8-1eb29cd713f4",
 CellID->1322864242]
}, Closed]],
Cell[CellGroupData[{
Cell[53073, 1134, 119, 1, 21, "TemplatesSection",ExpressionUUID->"003dcd88-35d7-486c-870c-763836ed5c3a",
 CellID->481117903],
Cell[53195, 1137, 148, 2, 70, "Template",ExpressionUUID->"2d325fa4-a67c-4e8a-b409-8bf27ecac302",
 CellID->872664766],
Cell[53346, 1141, 138, 2, 70, "Template",ExpressionUUID->"cd14b3f3-6c07-4a3e-a321-dfd1b89faecc",
 CellID->1710896799],
Cell[53487, 1145, 135, 2, 70, "Template",ExpressionUUID->"a0f521ac-13ca-4b34-b129-6907c592d87e",
 CellID->236467463],
Cell[53625, 1149, 138, 2, 70, "Template",ExpressionUUID->"305259d8-aae4-4cfb-b862-5419061d7fba",
 CellID->1463903691]
}, Closed]]
}, Open  ]]
}
]
*)

